{
  "name": "bscotch-stitch-vscode",
  "displayName": "Stitch",
  "version": "1.15.2",
  "private": true,
  "description": "GameMaker Language (GML) support and related tools for Visual Studio Code",
  "categories": [
    "Programming Languages",
    "Formatters",
    "Snippets",
    "Themes"
  ],
  "keywords": [
    "gamemaker"
  ],
  "homepage": "https://github.com/bscotch/stitch/tree/develop/packages/vscode#readme",
  "bugs": {
    "url": "https://github.com/bscotch/stitch/issues?q=is%3Aissue+is%3Aopen+label%3A%22%3Akeyboard%3A+vscode%22"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bscotch/stitch.git",
    "directory": "packages/vscode"
  },
  "license": "SEE LICENSE IN LICENSE.md",
  "qna": false,
  "publisher": "bscotch",
  "main": "./dist/extension.js",
  "scripts": {
    "build": "pnpm build:grammar && node scripts/build.mjs && pnpm build:manifest",
    "build:deps": "pnpm turbo run build --filter=bscotch-stitch-vscode...",
    "build:grammar": "node scripts/yaml-to-json.mjs syntaxes/gml.tmLanguage.yaml syntaxes/gml.tmLanguage.json",
    "build:manifest": "node dist/manifest.update.js && prettier -w package.json",
    "bump": "treb version && treb publish",
    "package": "vsce package --no-dependencies --githubBranch develop",
    "vscode:prepublish": "pnpm build",
    "vscode:publish": "vsce publish --no-dependencies --githubBranch develop",
    "watch": "nodemon --delay 1 -e js,cjs,mjs,ts,mts,cts,yaml --watch src --watch syntaxes --watch ../parser/dist --exec \"npm run build\"",
    "watch:grammar": "nodemon --delay 1 --watch syntaxes/gml.tmLanguage.yaml --exec \"npm run build:grammar\""
  },
  "contributes": {
    "commands": [
      {
        "command": "stitch.assets.reveal",
        "title": "Stitch: Show Asset",
        "enablement": "stitch.projectCount > 0 && resourceExtname =~ /\\.(yy|gml)$/"
      },
      {
        "command": "stitch.assets.filters.enable",
        "icon": "$(filter)",
        "title": "Enable Filter",
        "enablement": "view == bscotch-stitch-resources && stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.filters.disable",
        "icon": "$(filter-filled)",
        "title": "Disable Filter",
        "enablement": "view == bscotch-stitch-resources && stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.filters.edit",
        "title": "Edit Filter"
      },
      {
        "command": "stitch.assets.filters.new",
        "icon": "$(add)",
        "title": "New Filter...",
        "enablement": "view == bscotch-stitch-resources && stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.filters.delete",
        "icon": "$(close)",
        "title": "Delete Filter",
        "enablement": "view == bscotch-stitch-resources && stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.newFolder",
        "title": "New Group...",
        "icon": "$(new-folder)",
        "enablement": "view == bscotch-stitch-resources && stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.newScript",
        "title": "New Script...",
        "enablement": "view == bscotch-stitch-resources && stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.newObject",
        "title": "New Object...",
        "enablement": "view == bscotch-stitch-resources && stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.setParent",
        "title": "Set Parent...",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.assets.newEvent",
        "title": "New Event...",
        "enablement": "stitch.projectCount > 0"
      },
      {
        "command": "stitch.openIde",
        "title": "Stitch: Open in GameMaker",
        "shortTitle": "Open in GameMaker",
        "enablement": "(resourceExtname =~ /\\.(yy|yyp|gml)$/) || (view == bscotch-stitch-resources && stitch.projectCount > 0)",
        "icon": "$(edit)"
      },
      {
        "command": "stitch.run",
        "title": "Stitch: Run Project",
        "shortTitle": "Run",
        "icon": "$(play)"
      },
      {
        "command": "stitch.clean",
        "title": "Stitch: Clean Project Cache",
        "shortTitle": "Clean Cache",
        "icon": "$(history)"
      },
      {
        "command": "stitch.types.copy",
        "title": "Stitch: Copy Type"
      },
      {
        "command": "stitch.types.copyAsJsdocType",
        "title": "Stitch: Copy @type"
      },
      {
        "command": "stitch.types.copyAsJsdocSelf",
        "title": "Stitch: Copy @self"
      }
    ],
    "configuration": {
      "title": "Stitch",
      "properties": {
        "stitch.editing.autocomplete.ignoredPrefix": {
          "title": "Ignore autocomplete prefix",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Variables with this prefix will be skipped in autocomplete suggestions, unless those variables are within the same scope or file as the cursor."
        },
        "stitch.editing.signatureStatus.enable": {
          "title": "Enable signature status",
          "type": "boolean",
          "default": true,
          "description": "Stitch adds a statusbar item showing a function signature helper, replicating the functionality of the GameMaker IDE. This can be disabled."
        },
        "stitch.editing.signatureStatus.alignment": {
          "title": "Signature status alignment",
          "type": "string",
          "enum": [
            "left",
            "right"
          ],
          "default": "right",
          "description": "Whether the statusbar will show the function signature helper on the left or right side."
        },
        "stitch.run.defaultCompiler": {
          "title": "Default GameMaker compiler",
          "enum": [
            "vm",
            "yyc"
          ],
          "default": "vm"
        },
        "stitch.editing.reprocessOnTypeDelay": {
          "title": "Reprocess on type delay",
          "type": "number",
          "default": 50,
          "description": "The delay in milliseconds to wait after a keypress before reprocessing the document. This is used to avoid reprocessing the document while the user is typing. Increase this value if the editor is feeling sluggish. Note that certain actions and typed characters will trigger a reprocess no matter what this is set to."
        },
        "stitch.run.defaultConfig": {
          "title": "Default GameMaker config",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The default project config to use for the GameMaker runtime. If not set, the first child config will be used. If no configs are found, the Default will be used. This can also be set via the `config` property on a task."
        },
        "stitch.yy.format.enable": {
          "title": "Enable yy/yyp formatting",
          "type": "boolean",
          "default": true,
          "description": "Enable/disable formatting of GameMaker `.yy` and `.yyp` files."
        }
      }
    },
    "grammars": [
      {
        "language": "yy",
        "scopeName": "source.yyp",
        "path": "./syntaxes/yyp.tmLanguage.json"
      },
      {
        "language": "gml",
        "scopeName": "source.gml",
        "path": "./syntaxes/gml.tmLanguage.json",
        "embeddedLanguages": {
          "comment.block.documentation.gml": "gml-jsdoc"
        }
      },
      {
        "language": "stitch-logs",
        "scopeName": "source.stitch-logs",
        "path": "./syntaxes/logs.tmLanguage.json"
      }
    ],
    "iconThemes": [
      {
        "id": "stitch-icon-theme",
        "label": "Stitch Icons",
        "path": "./images/icon-theme.json"
      }
    ],
    "keybindings": [
      {
        "command": "-debug.openView",
        "key": "f5",
        "when": "editorTextFocus && !editorReadonly && resourceExtname =~ /\\.(yy|yyp|gml)$/"
      },
      {
        "command": "-workbench.action.debug.start",
        "key": "f5",
        "when": "editorTextFocus && !editorReadonly && resourceExtname =~ /\\.(yy|yyp|gml)$/"
      },
      {
        "command": "-workbench.action.debug.continue",
        "key": "f5",
        "when": "editorTextFocus && !editorReadonly && resourceExtname =~ /\\.(yy|yyp|gml)$/"
      },
      {
        "command": "stitch.run",
        "key": "f5",
        "when": "editorTextFocus && !editorReadonly && resourceExtname =~ /\\.(yy|yyp|gml)$/"
      },
      {
        "command": "stitch.assets.filters.new",
        "key": "Ctrl+F",
        "when": "view == bscotch-stitch-resources && stitch.projectCount > 0"
      }
    ],
    "languages": [
      {
        "id": "yy",
        "aliases": [
          "GameMaker Metadata",
          "yy",
          "yyp"
        ],
        "configuration": "./gml.language-configuration.json",
        "extensions": [
          ".yy",
          ".yyp"
        ]
      },
      {
        "id": "gml",
        "aliases": [
          "GameMaker Language",
          "gml"
        ],
        "extensions": [
          ".gml"
        ],
        "configuration": "./gml.language-configuration.json"
      },
      {
        "id": "stitch-logs",
        "configuration": "./logs.language-configuration.json"
      },
      {
        "id": "gml-jsdoc",
        "configuration": "./jsdoc.language-configuration.json"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "stitch.assets.newFolder",
          "when": "view == bscotch-stitch-resources && stitch.projectCount == 1",
          "group": "navigation@1"
        },
        {
          "command": "stitch.openIde",
          "when": "view == bscotch-stitch-resources && stitch.projectCount == 1",
          "group": "navigation@2"
        },
        {
          "command": "stitch.run",
          "when": "view == bscotch-stitch-resources && stitch.projectCount == 1",
          "group": "navigation@4"
        },
        {
          "command": "stitch.clean",
          "when": "view == bscotch-stitch-resources && stitch.projectCount == 1",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "stitch.assets.filters.enable",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == tree-filter-disabled",
          "group": "inline@1"
        },
        {
          "command": "stitch.assets.filters.disable",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == tree-filter-enabled",
          "group": "inline@1"
        },
        {
          "command": "stitch.assets.filters.new",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == tree-filter-group",
          "group": "inline@1"
        },
        {
          "command": "stitch.assets.filters.delete",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem =~ /^tree-filter-(enabled|disabled)/",
          "group": "inline@2"
        },
        {
          "command": "stitch.assets.newFolder",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == folder",
          "group": "navigation@3"
        },
        {
          "command": "stitch.assets.newFolder",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@1"
        },
        {
          "command": "stitch.assets.newScript",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == folder",
          "group": "navigation@1"
        },
        {
          "command": "stitch.assets.newObject",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == folder",
          "group": "navigation@2"
        },
        {
          "command": "stitch.assets.setParent",
          "when": "(view == bscotch-stitch-resources && viewItem == asset-objects) || (view == bscotch-stitch-inspector && viewItem == inspector-object-parents)",
          "group": "navigation@1"
        },
        {
          "command": "stitch.assets.newEvent",
          "when": "(view == bscotch-stitch-resources && viewItem == asset-objects) || (view == bscotch-stitch-inspector && viewItem == inspector-object-events)",
          "group": "navigation@1"
        },
        {
          "command": "stitch.openIde",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@2"
        },
        {
          "command": "stitch.run",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@4"
        },
        {
          "command": "stitch.clean",
          "when": "view == bscotch-stitch-resources && stitch.projectCount > 0 && viewItem == project",
          "group": "inline@3"
        }
      ],
      "explorer/context": [
        {
          "command": "stitch.openIde",
          "group": "navigation@3",
          "when": "resourceExtname =~ /\\.(yy|yyp|gml)$/"
        }
      ],
      "commandPalette": [
        {
          "command": "stitch.assets.reveal"
        },
        {
          "command": "stitch.openIde"
        },
        {
          "command": "stitch.run"
        },
        {
          "command": "stitch.clean"
        }
      ],
      "editor/context": [
        {
          "command": "stitch.types.copy",
          "when": "resourceExtname == .gml",
          "group": "1_stitch@1"
        },
        {
          "command": "stitch.types.copyAsJsdocType",
          "when": "resourceExtname == .gml",
          "group": "1_stitch@2"
        },
        {
          "command": "stitch.types.copyAsJsdocSelf",
          "when": "resourceExtname == .gml",
          "group": "1_stitch@3"
        }
      ]
    },
    "semanticTokenModifiers": [
      {
        "id": "global",
        "description": "Global"
      },
      {
        "id": "asset",
        "description": "A subset of global variables representing a GameMaker asset."
      },
      {
        "id": "local",
        "description": "A local variable."
      }
    ],
    "snippets": [
      {
        "language": "gml",
        "path": "./snippets/gml.code-snippets"
      }
    ],
    "themes": [
      {
        "id": "stitch-theme-bscotchseth",
        "label": "Stitch (Seth's Theme)",
        "path": "./themes/stitch-bscotchseth.json",
        "uiTheme": "vs-dark"
      }
    ],
    "views": {
      "bscotch-stitch": [
        {
          "id": "bscotch-stitch-inspector",
          "name": "Inspector",
          "icon": "./images/stitch-logo-mono.svg",
          "type": "tree"
        },
        {
          "id": "bscotch-stitch-resources",
          "name": "Resources",
          "icon": "./images/stitch-logo-mono.svg",
          "type": "tree"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "bscotch-stitch",
          "title": "Stitch",
          "icon": "./images/stitch-logo-mono.svg"
        }
      ]
    }
  },
  "activationEvents": [
    "onLanguage:gml",
    "onCommand:stitch.openIde"
  ],
  "devDependencies": {
    "@bscotch/gml-parser": "workspace:*",
    "@bscotch/pathy": "^2.7.3",
    "@bscotch/stitch": "workspace:*",
    "@bscotch/stitch-launcher": "workspace:*",
    "@bscotch/trebuchet": "2.8.4",
    "@bscotch/utility": "^6.8.3",
    "@bscotch/yy": "workspace:*",
    "@types/plist": "3.0.2",
    "@types/vscode": "1.80.0",
    "@types/xml2js": "0.4.11",
    "@vscode/vsce": "2.19.0",
    "esbuild": "^0.18.15",
    "glob": "10.3.3",
    "nodemon": "^3.0.1",
    "plist": "3.1.0",
    "turbo": "^1.10.9",
    "typescript": "5.1.6",
    "xml2js": "0.6.0",
    "yaml": "2.3.1",
    "zod": "^3.21.4",
    "zod-to-json-schema": "3.21.4",
    "zx": "^7.2.3"
  },
  "engines": {
    "vscode": "^1.80.0"
  },
  "icon": "./images/stitch-logo.png",
  "galleryBanner": {
    "color": "#37183c",
    "theme": "dark"
  },
  "preview": false,
  "capabilities": {
    "referencesProvider": "true",
    "definitionProvider": "true",
    "documentFormattingProvider": "true",
    "completionProvider": {
      "resolveProvider": "true",
      "triggerCharacters": [
        ".",
        "{",
        "<",
        "|"
      ]
    },
    "signatureHelpProvider": {
      "triggerCharacters": [
        "("
      ]
    },
    "hoverProvider": "true"
  }
}

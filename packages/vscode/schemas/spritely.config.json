{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Spritely: Image Correction Configuration",
  "description": "A config file that lives in the root of folder of a collection of images that need correction for use as a sprite source. It sets the options used by the Spritely CLI `spritely fix` command.",
  "type": "object",
  "properties": {
    "actions": {
      "type": "array",
      "description": "The default actions to perform on the images. These can be overridden with name suffixes (see [the docs](https://github.com/bscotch/stitch/tree/develop/packages/spritely#readme) for details).",
      "items": {
        "enum": ["bleed", "crop"]
      },
      "minItems": 1,
      "uniqueItems": true,
      "default": ["bleed", "crop"]
    },
    "recursive": {
      "type": "boolean",
      "description": "If `true`, the folder containing this config and all of its subfolders are treated as sprites. Each folder with immediate PNG children is treated as a sprite, with those children as its subimages. When using this mode, immediate child folders of --folder are treated as 'batches', providing additional options (e.g. enforceSyncedBatches). When `false`, only the folder containing this config is treated as a sprite.",
      "default": false
    },
    "allowSubimageSizeMismatch": {
      "type": "boolean",
      "description": "By default it is required that all subimages of a sprite are supposed to have identical dimensions. You can optionally bypass this requirement.",
      "default": false
    },
    "move": {
      "type": "string",
      "description": "Move images to a different folder after modification. Useful for pipelines that use presence/absence of images as signals. Maintains relative paths. Deletes any existing subimages before copying the new ones over."
    },
    "enforceSyncedBatches": {
      "type": "boolean",
      "description": "This treats top-level folders (immediate children of --folder) as 'batches' when using the 'move' option. When fixing sprites inside of a batch, any sprites found in the move target but not in the source are deleted. This lets you treat your art source as the 'truth', so that fixed assets available to a downstream game completely match what the artist is intending to be in the game (e.g. legacy sprites in a batch will be deleted from the move target).",
      "default": false
    },
    "rootImagesAreSprites": {
      "type": "boolean",
      "description": "Prior to correction, move any immediate PNG children of --folder into folders with the same name as those images. This allows root-level images to be treated as individual sprites.",
      "default": false
    },
    "ifMatch": {
      "type": "string",
      "description": "Only perform the tasks on sprites whose top-level folder (relative to --folder) matches this pattern. Case-sensitive, converted to a regex pattern using JavaScript's 'new RegExp()'."
    }
  }
}
